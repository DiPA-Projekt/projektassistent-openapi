# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub CI - Publish to MAVEN- and NPM-Package

on:
  release:
    types:
      - published

env:
  NPM_SCOPE: dipa-projekt
  PROJECT_NAME: projektassistent-openapi
  OPENAPI_YML: src/openapi.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Set up Node.js
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14.x
          registry-url: "https://npm.pkg.github.com"
          scope: "@${{ env.NPM_SCOPE }}"
      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Convert yml2json
        run: npx openapi-generator-cli generate -g openapi -i ${{ env.OPENAPI_YML }} -o dist/openapi
      - name: Read OpenAPI
        id: openapi
        run: |
          content=`cat dist/openapi/openapi.json | tr -d "\n"`
          echo "::set-output name=json::$content"
      - name: Configure Spring
        run: node scripts/configure-spring.js ${{ env.PROJECT_NAME }} ${{fromJson(steps.openapi.outputs.json).info.version}}
      - name: Generate API for Spring
        run: npx openapi-generator-cli generate -g spring -i ${{ env.OPENAPI_YML }} -c config/spring.json -o dist/spring
      - name: Generate API for NPM
        run: npx openapi-generator-cli generate -g typescript-rxjs -i ${{ env.OPENAPI_YML }} -o dist/typescript-rxjs
      - name: Configure Maven Pom for Spring
        run: node scripts/config-maven-pom-spring.js ${{ env.NPM_SCOPE }} ${{ env.PROJECT_NAME }}
      - name: Create package.json
        run: node scripts/create-package-json.js ${{ env.NPM_SCOPE }} ${{ env.PROJECT_NAME }} ${{fromJson(steps.openapi.outputs.json).info.version}} $GITHUB_REPOSITORY
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Validate, build and publish Maven-Package (Spring)
        run: |
          mvn clean compile
          mvn -B deploy
        working-directory: dist/spring
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate, build and publish NPM-Package
        run: |
          ls -la
          npm install
          npm publish --access restricted
        working-directory: dist/typescript-rxjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
